<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.innky.graduationproject.web.mapper.ClassStudentRelationMapper">

    <resultMap id="BaseResultMap" type="xyz.innky.graduationproject.web.pojo.ClassStudentRelation">
            <result property="id" column="id" jdbcType="INTEGER"/>
            <result property="studentId" column="student_id" jdbcType="INTEGER"/>
            <result property="classId" column="class_id" jdbcType="INTEGER"/>
            <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
            <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="ClassStudentVo" extends="BaseResultMap" type="xyz.innky.graduationproject.web.vo.ClassStudentVo">
        <result property="studentName" column="student_name" jdbcType="VARCHAR"/>
        <result property="className" column="class_name" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,student_id,class_id,
        start_time,end_time
    </sql>
    <select id="getAllByClassId" resultMap="ClassStudentVo">
        select class_student_relation.*,s.student_name, '' as class_name
        from class_student_relation left join student s on class_student_relation.student_id = s.student_id
        where
        class_student_relation.class_id = #{classId,jdbcType=NUMERIC}
        and end_time is null
    </select>
    <select id="getAllByStudentId" resultMap="ClassStudentVo">
        select class_student_relation.*, '' as student_name, ci.class_name
        from class_student_relation left join class_info ci on class_student_relation.class_id = ci.class_id
        where
        student_id = #{studentId,jdbcType=NUMERIC}
    </select>
    <insert id="insertSelective">
        insert into class_student_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="studentId != null">student_id,</if>
            <if test="classId != null">class_id,</if>
            <if test="startTime != null">start_time,</if>
            <if test="endTime != null">end_time,</if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=INTEGER},</if>
            <if test="studentId != null">#{studentId,jdbcType=INTEGER},</if>
            <if test="classId != null">#{classId,jdbcType=INTEGER},</if>
            <if test="startTime != null">#{startTime,jdbcType=TIMESTAMP},</if>
            <if test="endTime != null">#{endTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateEndTimeByStudentId">
        update class_student_relation
        set end_time = #{endTime}
        where student_id = #{studentId,jdbcType=NUMERIC}
            and end_time is null
    </update>


</mapper>
